@model Requirement_Management.ViewModels.RequirementView

@{
    ViewBag.Title = "Edit Requirement";
}

<div class="mx-auto p-0 col-11 col-sm-8 col-md-12 card mb-3 alert alert-secondary" @*style="position: absolute; left: 0; right: 0;top: 20%; bottom: 24.4%;"*@>
    <div class="card-header bg-dark text-white p-2">
        <h4 class="text-center mx-auto my-0">Edit Requirement</h4>
    </div>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal mx-auto p-1">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            <div class="d-flex">
                <div class="form-group mx-auto col-lg-4 my-2">
                    <label class="control-label w-100" for="Title"><b>Requirement Name:</b> <i class="text-danger">*required</i></label>
                    <div class="w-100">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @id = "Title" } })
                        <span class="text-danger ml-1 m-0 titleVal" style="font-family: none;display: none;">*Title can't be empty</span>
                    </div>
                </div>

                <div class="form-group mx-auto col-lg-4 my-2">
                    <label class="control-label w-100" for="Date"><b>Date:</b> <i class="text-danger">*required</i></label>
                    <div class="w-100">
                        @*@Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", @id = "Date", @type = "date"} })*@
                        <input class="form-control text-box single-line valid" data-val="true" data-val-date="The field Date must be a date." data-val-required="The Date field is required." id="Date" name="Date" type="date" value="@Model.Date.ToString("yyyy-MM-dd")">
                        <span class="text-danger ml-1 m-0 dateVal" style="font-family: none;display: none;">*Date can't be empty</span>
                    </div>
                </div>

                <div class="form-group mx-auto col-lg-4 my-2">
                    <label class="control-label w-100" for="CompanyId"><b>Company:</b> <i class="text-danger">*required</i></label>
                    <div class="w-100">
                        @Html.DropDownList("CompanyId", null, htmlAttributes: new { @class = "form-control", @id = "Company", @disabled = "true" })
                        @Html.ValidationMessageFor(model => model.CompanyId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="d-flex">
                <div class="form-group col-lg-4 my-2">
                    <label class="control-label" for="mulfiles"><b>Add Files:</b></label>
                    <div class="d-flex">
                        <input type="file" id="mulfiles" name="mulfiles" multiple>
                        <span class="field-validation-valid text-danger" data-valmsg-for="files" data-valmsg-replace="true"></span>
                    </div>
                </div>
                <div class="form-group col-lg-4 my-2 d-flex align-items-end">
                    <div class="d-flex">
                        <a class="btn btn-success m-1" id="save" onclick="Save();">Save</a>
                        @Html.ActionLink("Back to List", "Index", new { @area = "" }, new { @class = "btn btn-info m-1" })
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<div class="d-flex flex-column alert alert-info p-0">
    <div class="row m-2">
        <div class="d-flex flex-column col-3">
            <div class="form-group">
                <label class="control-label w-100" for="Project"><b>Project:</b> <i class="text-danger">*required</i></label>
                <div class="w-100">
                    @Html.DropDownList("Project", null, htmlAttributes: new { @class = "form-control" })
                    <span class="text-danger ml-1 m-0 proVal" style="font-family: none; display: none;">*Project can't be empty</span>
                </div>
            </div>
            <div class="form-group">
                <label class="control-label w-100" for="CategoryId"><b>Module Category:</b> <i class="text-danger">*required</i></label>
                <div class="w-100">
                    @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control", @id = "Category" })
                    <span class="text-danger ml-1 m-0 catVal" style="font-family: none;display: none;">*Software Category can't be empty</span>
                </div>
            </div>
            <div class="form-group">
                <label class="control-label w-100" for="SoftwareId"><b>Modules:</b> <i class="text-danger">*required</i></label>
                <div class="w-100">
                    @Html.DropDownList("SoftwareId", (MultiSelectList)ViewBag.SoftwareId, new { @multiple = "multiple", @class = "form-control", @id = "Softwares" })
                    <span class="text-danger ml-1 m-0 softVal" style="font-family: none;display: none;">*Software can't be empty</span>
                </div>
            </div>
        </div>
        <div class="d-flex flex-column col-3">
            <div class="form-group">
                <label class="control-label w-100" for="ProjectSchedule"><b>Project Schedule:</b> <i class="text-danger">*required</i></label>
                <div class="w-100">
                    @Html.DropDownList("ProjectSchedule", null, htmlAttributes: new { @class = "form-control" })
                    <span class="text-danger ml-1 m-0 scheVal" style="font-family: none; display: none;">*Project Schedule can't be empty</span>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label w-100" for="ReqMode"><b>Requirement Mode:</b> <i class="text-danger">*required</i></label>
                <div class="w-100">
                    <select class="form-control" id="ReqMode" name="ReqMode">
                        <option value="0">Project</option>
                        <option value="1">Task</option>
                        <option value="2">Maintenance</option>
                        <option value="3">Bug</option>
                        <option value="4">Free_Service</option>
                    </select>
                    <span class="field-validation-valid text-danger" data-valmsg-for="Status" data-valmsg-replace="true"></span>
                </div>
            </div>
            <div class="form-group">
                <label class="control-label w-100" for="Requirement"><b>Requirement:</b> <i class="text-danger">*required</i></label>
                <div class="w-100">
                    <textarea class="form-control text-area single-line m-0" id="Requirement" name="Requirement" required="required" type="textarea" style="max-width: 300px;" rows="4" value=""></textarea>
                    <span class="text-danger ml-1 m-0 reqVal" style="font-family: none;display: none;">*Requirement can't be empty</span>
                </div>
            </div>
            
        </div>
        <div class="d-flex flex-column col-3">
            <div class="form-group">
                <label class="control-label w-100" for="ReqProviderId"><b>Contact Person:</b> <i class="text-danger">*required</i></label>
                <div class="w-100">
                    @Html.DropDownList("ReqProviderId", null, htmlAttributes: new { @class = "form-control", @id = "Provider" })
                    <span class="text-danger ml-1 m-0 reqproVal" style="font-family: none; display: none;">*Requirement Provider can't be empty</span>
                </div>
            </div>
            <div class="form-group">
                <label class="control-label w-100" for="Description"><b>Description:</b></label>
                <div class="w-100">
                    <textarea class="form-control text-area single-line m-0" id="Description" name="Description" required="required" type="textarea" style="max-width: 600px;" rows="7" value=""></textarea>
                </div>
            </div>
        </div>
        <div class="d-flex flex-column col-3">
            <div class="form-group">
                <label class="control-label w-100" for="ReqTypeId"><b>Requirement Type:</b></label>
                <div class="w-100">
                    @Html.DropDownList("ReqTypeId", null, htmlAttributes: new { @class = "form-control", @id = "Type" })
                    <span class="field-validation-valid text-danger" data-valmsg-for="Type" data-valmsg-replace="true"></span>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label w-100" for="Status"><b>Status:</b></label>
                <div class="w-100">
                    @*@Html.DropDownList("Status", (IEnumerable<SelectListItem>)ViewBag.Status, new { @class = "form-control", @id = "Status" })*@
                    @*@Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control", @id = "Status" })*@
                    <select class="form-control" id="Status" name="Status">
                        <option value="0">Submitted</option>
                        <option value="1">Verified</option>
                        <option value="2">Working</option>
                        <option value="3">Done</option>
                        <option value="4">Tested</option>
                        <option value="5">Deployed</option>
                        <option value="6">Canceled</option>
                    </select>
                    <span class="field-validation-valid text-danger" data-valmsg-for="Status" data-valmsg-replace="true"></span>
                </div>
            </div>
            <div class="form-group">
                <label class="control-label w-100" for="Priority"><b>Priority:</b></label>
                <div class="w-100">
                    <select class="form-control" id="Priority" name="Priority">
                        <option value="0">High</option>
                        <option value="1">Mid</option>
                        <option value="2">Low</option>
                    </select>
                    <span class="field-validation-valid text-danger" data-valmsg-for="Priority" data-valmsg-replace="true"></span>
                </div>
            </div>
            <div class="form-group">
                <button class="btn btn-primary mx-auto" id="add" onclick="AddInfo();">Add</button>
            </div>
        </div>
    </div>
</div>


<div class="my-2 text-center">
    <table class="w-100 table-sm" id="ReqTable">
        <thead class="bg-dark text-white">
            <tr class="border">
                <th class="border">#SL</th>
                <th style="display: none;">ProviderId</th>
                <th class="border">
                    ReqProvider
                </th>
                <th style="display: none;">ProjectId</th>
                <th class="border">
                    Project
                </th>
                <th style="display: none;">ScheduleId</th>
                <th class="border">
                    Schedule
                </th>
                <th style="display: none;">CategoryId</th>
                <th class="border">
                    Category
                </th>
                <th style="display: none;">SoftwaresId</th>
                <th class="border">
                    Modules
                </th>
                <th class="border">
                    Requirement
                </th>
                <th class="border">
                    Description
                </th>
                <th style="display: none;">TypeId</th>
                <th class="border">
                    Req. Type
                </th>
                <th style="display: none;">ReqModeId</th>
                <th class="border">
                    Req. Mode
                </th>
                <th style="display: none;">StatusId</th>
                <th class="border">
                    Status
                </th>
                <th style="display: none;">PriorityId</th>
                <th class="border">
                    Priority
                </th>
                <th class="text-center" style="width: 130px;">Action</th>
            </tr>
        </thead>
        <tbody id="reqtable">            
            @{ var sl = 0; }
            @foreach (var item in Model.ReqDetail)
            {
                int status = (int)item.Status;
                int reqmode = (int)item.ReqMode;
                int prio = (int)item.Priority;
                <tr class="border">
                    <td class="sl border" style="">@(++sl)</td>
                    <td class="providerid border" style="display: none;">@Html.DisplayFor(modelItem => item.ReqProviderId)</td>
                    <td class="provider border">@item.ReqProviderName</td>
                    <td class="projectid border" style="display: none;">@Html.DisplayFor(modelItem => item.ProjectId)</td>
                    <td class="project border">@item.ProjectName</td>
                    <td class="scheduleid border" style="display: none;">@Html.DisplayFor(modelItem => item.ProjectScheduleId)</td>
                    <td class="schedule border">@item.ScheduleName</td>
                    <td class="categoryid border" style="display: none;">@Html.DisplayFor(modelItem => item.SoftCategoryId)</td>
                    <td class="category border">@item.SoftCategoryName</td>
                    <td class="softwaresid" style="display: none;">@Html.DisplayFor(modelItem => item.ReqSoftwareId)</td>
                    <td class="softwares border">@item.ReqSoftwareName</td>
                    <td class="id" style="display: none;">@Html.DisplayFor(modelItem => item.Id)</td>
                    <td class="requirement border">@Html.DisplayFor(modelItem => item.Requirement)</td>
                    <td class="description border">@Html.DisplayFor(modelItem => item.Description)</td>
                    <td class="typeid border" style="display: none;">@Html.DisplayFor(modelItem => item.ReqTypeId)</td>
                    <td class="type border">@item.ReqTypeName</td>
                    <td class="reqmodeid" style="display: none;">@reqmode</td>
                    <td class="reqmode border">@Html.DisplayFor(modelItem => item.ReqMode)</td>
                    <td class="reqid" hidden>@Html.DisplayFor(modelItem => item.ReqId)</td>
                    <td class="statusid" style="display: none;">@status</td>
                    <td class="status border">@Html.DisplayFor(modelItem => item.Status)</td>
                    <td class="prioid" style="display: none;">@prio</td>
                    <td class="prio border">@Html.DisplayFor(modelItem => item.Priority)</td>
                    <td class="text-center border">
                        <button class="btn btn-info btn-sm" id="edit" onclick="editRow(this);">Edit</button>                        
                        <button class="btn btn-danger btn-sm" id="delete" onclick="deleteRow(this);">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="d-flex justify-content-center flex-wrap my-5">
    @{
        foreach (var item in Model.FilePath)
        {
            <div class="d-flex flex-column mx-3 m-1 img-thumbnail bg-light">
                <img src="\Uploads\@item" class="file" alt="@item" width="150" height="150">
                <button class="btn btn-danger btn-sm mx-auto mt-2 mb-1" id="delete" onclick="deleteFile(this);">Delete</button>
            </div>
        }
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            $("#Type").select2();
            $("#Project").select2();
            $("#ProjectSchedule").select2();
            $("#Category").select2();
            $("#Status").select2();
            $("#ReqMode").select2();
            $("#Priority").select2();
            $("#Provider").select2();
            $("#Company").select2();
            $("#Softwares").select2();
        });

        $("#Company").on('change', function () {
            $("#Project").empty();
            $("#Provider").empty();
            var inputData = {
                'Id': this.value
            };

            $.get("/Requirements/GetProjects", inputData,
                function (data, status) {
                    //console.log(data);
                    var appendOptionsString = "";
                    for (var i = 0; i < data.length; i++) {
                        appendOptionsString = appendOptionsString +
                            "<option value=\"" + data[i].Id + "\" >" + data[i].Name + "</option>";
                    }
                    $("#Project").append(appendOptionsString);

                    if (data.length > 0) $("#Project").val(data[0].Id).trigger("change");
                });

            $.get("/Requirements/GetReqProvider", inputData,
                function (data, status) {
                    //console.log(data);
                    var appendOptionsString = "";
                    for (var i = 0; i < data.length; i++) {
                        appendOptionsString = appendOptionsString +
                            "<option value=\"" + data[i].Id + "\" >" + data[i].Name + "</option>";
                    }
                    $("#Provider").append(appendOptionsString);

                    if (data.length > 0) $("#Provider").val(data[0].Id).trigger("change");

                });
        });

        $("#Project").on('change', function () {
            $("#Category").empty();
            $("#ProjectSchedule").empty();

            var inputData = {
                'Id': this.value
            };

            var category = "", schedule = "";
            if (curobj) {
                category = $(curobj).parent().parent().find(".categoryid").text();
                schedule = $(curobj).parent().parent().find(".scheduleid").text();
            }

            //console.log(softwareids.split(", "));

            var ok = false;
            $.get("/Requirements/GetSchedules", inputData,
                function (data, status) {
                    //console.log(data);
                    var appendOptionsString = "";
                    for (var i = 0; i < data.length; i++) {
                        appendOptionsString = appendOptionsString +
                            "<option value=\"" + data[i].Id + "\" >" + data[i].Mode + " - " + data[i].StartDate + "</option>";
                        if (data[i].Id == schedule) ok = true;
                    }
                    $("#ProjectSchedule").append(appendOptionsString);

                    if (data.length > 0 && (schedule == "" || ok == false)) schedule = data[0].Id;
                    $("#ProjectSchedule").val(schedule).trigger("change");
                });

            ok = false;
            $.get("/Requirements/GetCategories", inputData,
                function (data, status) {
                    //console.log(data);
                    var appendOptionsString = "";
                    for (var i = 0; i < data.length; i++) {
                        appendOptionsString = appendOptionsString +
                            "<option value=\"" + data[i].Id + "\" >" + data[i].Name + "</option>";
                        if (category == data[i].Id) ok = true;
                    }
                    $("#Category").append(appendOptionsString);

                    if (data.length > 0) {
                        if (category == "" || ok == false) category = data[0].Id;
                        $("#Category").val(category).trigger("change");
                    }
                    else {
                        $("#Softwares").empty();
                    }
                });

        });

        $("#Category").on('change', function () {
            $("#Softwares").empty();
            var inputData = {
                'ProjectId': $("#Project").val(),
                'CategoryId': this.value
            };

            var softwareids = "";
            if (curobj) {
                softwareids = $(curobj).parent().parent().find(".softwaresid").text();
            }

            //console.log(softwareids.split(", "));

            $.get("/Requirements/GetProjectSoftwares", inputData,
                function (data, status) {
                    //console.log(data);
                    var appendOptionsString = "";
                    for (var i = 0; i < data.length; i++) {
                        appendOptionsString = appendOptionsString +
                            "<option value=\"" + data[i].Id + "\" >" + data[i].Name + "</option>";
                    }
                    $("#Softwares").append(appendOptionsString);
                    $("#Softwares").val(softwareids.split(", ")).trigger("change");
                });

        });

        $("#ProjectSchedule").on('change', function () {
            var inputData = {
                'Id': this.value
            };

            $.get("/Requirements/GetMode", inputData,
                function (data, status) {
                    var modeid = data;
                    if (curobj) modeid = $(curobj).parent().parent().find(".reqmodeid").text();
                    $("#ReqMode").val(modeid).trigger("change");
                });
        });

        $("#Company").trigger("change");

        var editstat = false;
        var curobj = null;

        function validateDetail() {
            var validation = true;
            var pro = $("#Project").val();
            if (pro == null) {
                $("#Project").parent().find(".proVal").css("display", "inline-block");
                validation = false;
            }
            else { $("#Project").parent().find(".proVal").css("display", "none"); }

            var sche = $("#ProjectSchedule").val();
            if (sche == null) {
                $("#ProjectSchedule").parent().find(".scheVal").css("display", "inline-block");
                validation = false;
            }
            else { $("#ProjectSchedule").parent().find(".scheVal").css("display", "none"); }

            var req = $("#Requirement").val();
            if (req == "") {
                $("#Requirement").parent().find(".reqVal").css("display", "inline-block");
                validation = false;
            }
            else { $("#Requirement").parent().find(".reqVal").css("display", "none"); }

            var category = $("#Category").val();
            if (category == null) {
                $("#Category").parent().find(".catVal").css("display", "inline-block");
                validation = false;
            }
            else { $("#Category").parent().find(".catVal").css("display", "none"); }

            var softwareData = $("#Softwares").select2('data');;
            if (softwareData.length == 0) {
                $("#Softwares").parent().find(".softVal").css("display", "inline-block");
                validation = false;
            }
            else { $("#Softwares").parent().find(".softVal").css("display", "none"); }
            return validation;
        }


        function AddInfo() {
            var softwareData = $("#Softwares").select2('data');

            var softwareIds = "";
            var softwares = "";

            if (softwareData.length == 0) {
                $("#Softwares").find('option').prop("selected", true);
                $("#Softwares").trigger('change');
                softwareData = $("#Softwares").select2('data');
            }

            var validation = validateDetail();
            if (!validation) return;

            for (var i = 0; i < softwareData.length; i++) {
                softwareIds += softwareData[i].id + (i + 1 < softwareData.length ? ", " : "");
                softwares += softwareData[i].text + (i + 1 < softwareData.length ? ", " : "");
            }

            if (editstat) {
                $(curobj).parent().parent().find(".providerid").text($("#Provider").val());
                $(curobj).parent().parent().find(".provider").text($("#Provider option:selected").text());
                $(curobj).parent().parent().find(".projectid").text($("#Project").val());
                $(curobj).parent().parent().find(".project").text($("#Project option:selected").text());
                $(curobj).parent().parent().find(".scheduleid").text($("#ProjectSchedule").val());
                $(curobj).parent().parent().find(".schedule").text($("#ProjectSchedule option:selected").text());
                $(curobj).parent().parent().find(".categoryid").text($("#Category").val());
                $(curobj).parent().parent().find(".category").text($("#Category option:selected").text());
                $(curobj).parent().parent().find(".requirement").text($("#Requirement").val());
                $(curobj).parent().parent().find(".description").text($("#Description").val());
                $(curobj).parent().parent().find(".typeid").text($("#Type").val());
                $(curobj).parent().parent().find(".type").text($("#Type option:selected").text());
                $(curobj).parent().parent().find(".reqmodeid").text($("#ReqMode").val());
                $(curobj).parent().parent().find(".reqmode").text($("#ReqMode option:selected").text());
                $(curobj).parent().parent().find(".softwaresid").text(softwareIds);
                $(curobj).parent().parent().find(".softwares").text(softwares);
                $(curobj).parent().parent().find(".statusid").text($("#Status").val());
                $(curobj).parent().parent().find(".status").text($("#Status option:selected").text()); 
                $(curobj).parent().parent().find(".prioid").text($("#Priority").val());
                $(curobj).parent().parent().find(".prio").text($("#Priority option:selected").text());

                var inputData = {
                    'Id': $(curobj).parent().parent().find(".id").text(),
                    'ReqProviderId': $("#Provider").val(),
                    'Requirement': $("#Requirement").val(),
                    'Description': $("#Description").val(),
                    'ReqTypeId': $("#Type").val(),
                    'ReqMode': $("#ReqMode").val(),
                    'ReqId': $("#Id").val(),
                    'Status': $("#Status").val(),
                    'Priority': $("#Priority").val(),
                    'SoftCategoryId': $("#Category").val(),
                    'ProjectId': $("#Project").val(),
                    'ProjectScheduleId': $("#ProjectSchedule").val(),

                    'ReqSoftwareId': softwareIds
                };

                $.post("/Requirements/EditReqDetail", inputData,
                    function (data, status) {
                        if (data.Id) {
                            alert("Operation Successfull.");
                        }
                    });

                $(curobj).parent().find(".btn-danger").attr("disabled", false);
                editstat = false;
                curobj = null;

            }
            else {

                var sl = parseInt($('#reqtable tr:last').find('.sl').text());
                
                $("#reqtable").append(
                   '<tr class="border">' +
                        '<td class="sl border">' + ++sl + '</td>' +
                        '<td class="providerid" style="display:none;" >' + $("#Provider").val() + '</td>' +
                        '<td class="provider border" >' + $("#Provider option:selected").text() + '</td>' +
                        '<td class="projectid" style="display:none;" >' + $("#Project").val() + '</td>' +
                        '<td class="project border" >' + $("#Project option:selected").text() + '</td>' +
                        '<td class="scheduleid" style="display:none;" >' + $("#ProjectSchedule").val() + '</td>' +
                        '<td class="schedule border" >' + $("#ProjectSchedule option:selected").text() + '</td>' +
                        '<td class="categoryid" style="display:none;" >' + $("#Category").val() + '</td>' +
                        '<td class="category border">' + $("#Category option:selected").text() + '</td>' +
                        '<td class="softwaresid" style="display:none;" >' + softwareIds + '</td>' +
                        '<td class="softwares border">' + softwares + '</td>' +
                        '<td class="id" style="display: none;"></td>' +
                        '<td class="requirement border">' + $("#Requirement").val() + '</td>' +
                        '<td class="description border" >' + $("#Description").val() + '</td>' +
                        '<td class="typeid" style="display:none;" >' + $("#Type").val() + '</td>' +
                        '<td class="type border">' + $("#Type option:selected").text() + '</td>' +
                        '<td class="reqmodeid" style="display:none;" >' + $("#ReqMode").val() + '</td>' +
                        '<td class="reqmode border">' + $("#ReqMode option:selected").text() + '</td>' +
                        '<td class="statusid" style="display:none;" >' + $("#Status").val() + '</td>' +
                        '<td class="status border">' + $("#Status option:selected").text() + '</td>' +
                        '<td class="prioid" style="display:none;" >' + $("#Priority").val() + '</td>' +
                        '<td class="prio border">' + $("#Priority option:selected").text() + '</td>' +
                        '<td class="text-center">' +
                            '<button class="btn btn-info btn-sm mx-1" id="edit" onclick="editRow(this);">Edit</button>' +
                            '<button class="btn btn-danger btn-sm" id="delete" onclick="deleteRow(this);">Delete</button>' +
                        '</td>' +
                    '</tr>'
                );

                var inputData = {
                    'ReqProviderId': $("#Provider").val(),
                    'Requirement': $("#Requirement").val(),
                    'Description': $("#Description").val(),
                    'ReqTypeId': $("#Type").val(),
                    'ReqMode': $("#ReqMode").val(),
                    'ReqId' : $("#Id").val(),
                    'Status': $("#Status").val(),
                    'Priority': $("#Priority").val(),
                    'SoftCategoryId': $("#Category").val(),
                    'ProjectId': $("#Project").val(),
                    'ProjectScheduleId': $("#ProjectSchedule").val(),

                    'ReqSoftwareId': softwareIds
                };

                console.log(inputData);

                $.post("/Requirements/AddReqDetail", inputData,
                    function (data, status) {
                        if (data.Id) {
                            $('#reqtable tr:last').find('.id').text(data.Id);
                            alert("Operation Successfull.");
                        }
                    });

            }

            $("#Provider").val($('#Provider option:first-child').val()).trigger("change");
            $("#Project").val($('#Project option:first-child').val()).trigger("change");
            $("#Requirement").val(null);
            $("#Description").val(null);
            $("#Type").val($('#Type option:first-child').val()).trigger("change");
            $("#Status").val('0').trigger("change");
            $("#ReqMode").val('0').trigger("change");
            $("#Priority").val('0').trigger("change");
        }


        function validateRemoveDetail() {
            var validation = true;
            var table = document.getElementById("reqtable");
            if (table.rows.length == 1) {
                alert("Requirements Detail Can't Be Empty.")
                validation = false;
            }
            return validation;
        }


        function deleteRow(rowobj) {
            var validation = validateRemoveDetail();

            if (!validation) return;

            var inputData = {
                'id': $(rowobj).parent().parent().find(".id").text()
            };
            $.post("/Requirements/DeleteReqDetail", inputData,
                   function (data, status) {
                       if (data.Id) {
                           alert("Operation Successfull.");
                           $(rowobj).parent().parent().remove();
                           
                           var table = document.getElementById("reqtable");
                           for (var i = 0; i < table.rows.length; i++) {
                               $(table.rows[i]).find(".sl").text(i + 1);
                           }
                       }
                   });
        }


        var fileobj;
        function deleteFile(fileobj) {
            var fname = $(fileobj).parent().find(".file").attr("alt");
            console.log(fname);
            var inputData = {
                'Filename': fname
            };
            $.post("/Requirements/DeleteFile", inputData,
                   function (data, status) {
                       if (data.Id) {
                           alert("Operation Successfull.");
                           $(fileobj).parent().remove();
                       }
                   });
        }

        function editRow(rowobj) {
            if (curobj != null) {
                $(curobj).parent().find(".btn-danger").attr("disabled", false);
            }

            curobj = rowobj;

            $("#Provider").val($(rowobj).parent().parent().find(".providerid").text()).trigger("change");
            $("#Project").val($(rowobj).parent().parent().find(".projectid").text()).trigger("change");
            $("#Requirement").val($(rowobj).parent().parent().find(".requirement").text());
            $("#Description").val($(rowobj).parent().parent().find(".description").text());
            $("#Type").val($(rowobj).parent().parent().find(".typeid").text()).trigger("change");
            $("#ReqMode").val($(rowobj).parent().parent().find(".reqmodeid").text()).trigger("change");
            $("#Status").val($(rowobj).parent().parent().find(".statusid").text()).trigger("change");
            $("#Priority").val($(rowobj).parent().parent().find(".prioid").text()).trigger("change");
            
            editstat = true;

            $(rowobj).parent().find(".btn-danger").attr("disabled", true);

            console.log($(rowobj).parent().parent().find(".statusid").text(), " <--> ", $(rowobj).parent().parent().find(".typeid").text())
        }


        function validateReq() {
            var validation = true;
            var req = $("#Title").val();
            if (req == "") {
                $("#Title").parent().find(".titleVal").css("display", "inline-block");
                validation = false;
            }
            else { $("#Title").parent().find(".titleVal").css("display", "none"); }
            
            if ($("#Date").val() == "") {
                $("#Date").parent().find(".dateVal").css("display", "inline-block");
                validation = false;
            }
            else { $("#Date").parent().find(".dateVal").css("display", "none"); }
            return validation;
        }

        function Save() {
            var validation = validateReq();
            if (!validation) return;

            var files = $("#mulfiles").get(0).files;
            var fileData = new FormData();

            for (var i = 0; i < files.length; i++) {
                fileData.append("mulfiles", files[i]);
            }

            for (var pair of fileData.entries()) {
                console.log(pair[0] + ', ' + pair[1]);
            }

            $.ajax({
                type: "POST",
                url: "/Requirements/UploadFiles",
                dataType: "json",
                contentType: false, // Not to set any content header
                processData: false, // Not to process data
                data: fileData,
                success: function (result, status, xhr) {
                    console.log(result.filepaths);
                    if (!result.error) {
                        alert(result.message);
                        var inputData = {
                            'Id': $("#Id").val(),
                            'Title': $("#Title").val(),
                            'Date': $("#Date").val(),
                            'CompanyId': $("#Company").val(),

                            'FilePath': result.filepaths,
                        };
                    }
                    else {
                        var inputData = {
                            'Id': $("#Id").val(),
                            'Title': $("#Title").val(),
                            'Date': $("#Date").val(),
                            'CompanyId': $("#Company").val(),
                        };
                    }

                    $.post("/Requirements/EditReq", inputData,
                        function (data, status) {
                            if (data.Id) {
                                alert("Operation Successfull.");
                            }
                        });
                    console.log(inputData);
                },
                error: function (result, status, xhr) {
                    alert(result.message);
                }
            });
        }
    </script>
}
